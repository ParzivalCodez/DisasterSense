import { BaseComponentOptionsWithPayload, VoiceCallTapContract, CallingCallTapEventParams, EventEmitter, BaseConsumer } from '@signalwire/core';
/**
 * Instances of this class allow you to control (e.g., resume) the
 * tap inside a Voice Call. You can obtain instances of this class by
 * starting a Tap from the desired {@link Call} (see
 * {@link Call.tap})
 */
export interface CallTap extends VoiceCallTapContract {
    setPayload: (payload: CallingCallTapEventParams) => void;
    _paused: boolean;
    /** @internal */
    emit(event: EventEmitter.EventNames<any>, ...args: any[]): void;
}
export declare type CallTapEventsHandlerMapping = {};
export interface CallTapOptions extends BaseComponentOptionsWithPayload<CallingCallTapEventParams> {
}
export declare class CallTapAPI extends BaseConsumer<CallTapEventsHandlerMapping> implements VoiceCallTapContract {
    private _payload;
    constructor(options: CallTapOptions);
    get id(): string;
    get controlId(): string;
    get nodeId(): string;
    get callId(): string;
    get state(): import("@signalwire/core").CallingCallTapState;
    /** @internal */
    protected setPayload(payload: CallingCallTapEventParams): void;
    stop(): Promise<this>;
    ended(): Promise<this>;
}
export declare const createCallTapObject: (params: CallTapOptions) => CallTap;
//# sourceMappingURL=CallTap.d.ts.map