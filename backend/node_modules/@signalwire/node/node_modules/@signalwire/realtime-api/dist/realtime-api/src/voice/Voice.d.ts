import { Call } from './Call';
import { DeviceBuilder } from './DeviceBuilder';
import type { VoiceDialMethodParams, VoiceDialPhonelMethodParams, VoiceDialSipMethodParams, VoiceEvents, VoiceListeners, VoiceListenersEventsMapping } from '../types';
import { BaseNamespace } from '../BaseNamespace';
import { SWClient } from '../SWClient';
interface VoiceListenOptions extends VoiceListeners {
    topics: string[];
}
export declare class Voice extends BaseNamespace<VoiceListenOptions, VoiceEvents> {
    protected _eventMap: VoiceListenersEventsMapping;
    constructor(options: SWClient);
    dial(params: VoiceDialMethodParams): Promise<Call>;
    dialPhone({ region, maxPricePerMinute, nodeId, listen, ...params }: VoiceDialPhonelMethodParams): Promise<Call>;
    dialSip({ region, maxPricePerMinute, nodeId, listen, ...params }: VoiceDialSipMethodParams): Promise<Call>;
}
export { Call } from './Call';
export { DeviceBuilder };
export { Playlist } from './Playlist';
export type { CallPlayback } from './CallPlayback';
export type { CallPrompt } from './CallPrompt';
export type { CallRecording } from './CallRecording';
export type { CallTap } from './CallTap';
export type { CallingCallDirection, CallingCallState, CallingCallWaitForState, ClientEvents, CollectDigitsConfig, CollectSpeechConfig, CreateVoicePlaylistParams, NestedArray, RingtoneName, SipCodec, SipHeader, SpeechOrDigits, TapDevice, TapDeviceRTP, TapDeviceWS, TapDirection, VoiceCallConnectMethodParams, VoiceCallConnectPhoneMethodParams, VoiceCallConnectSipMethodParams, VoiceCallContract, VoiceCallDetectContract, VoiceCallDetectDigitParams, VoiceCallDetectFaxParams, VoiceCallDetectMachineParams, VoiceCallDetectMethodParams, VoiceCallCollectContract, VoiceCallCollectMethodParams, VoiceCallDeviceParams, VoiceCallDialPhoneMethodParams, VoiceCallDialRegionParams, VoiceCallDialSipMethodParams, VoiceCallDisconnectReason, VoiceCallPhoneParams, VoiceCallPlayAudioMethodParams, VoiceCallPlayAudioParams, VoiceCallPlaybackContract, VoiceCallPlayParams, VoiceCallPlayRingtoneMethodParams, VoiceCallPlayRingtoneParams, VoiceCallPlaySilenceMethodParams, VoiceCallPlaySilenceParams, VoiceCallPlayTTSMethodParams, VoiceCallPlayTTSParams, VoiceCallPromptAudioMethodParams, VoiceCallPromptContract, VoiceCallPromptMethodParams, VoiceCallPromptRingtoneMethodParams, VoiceCallPromptTTSMethodParams, VoiceCallRecordingContract, VoiceCallRecordMethodParams, VoiceCallSipParams, VoiceCallTapAudioMethodParams, VoiceCallTapContract, VoiceCallTapMethodParams, VoiceDeviceBuilder, VoiceDialerParams, VoicePlaylist, } from '@signalwire/core';
export type { CallPlayMethodParams, CallPlayAudioMethodarams, CallPlaySilenceMethodParams, CallPlayRingtoneMethodParams, CallPlayTTSMethodParams, CallRecordMethodParams, CallRecordAudioMethodParams, CallPromptMethodParams, CallPromptAudioMethodParams, CallPromptRingtoneMethodParams, CallPromptTTSMethodParams, CallCollectMethodParams, CallTapMethodParams, CallTapAudioMethodParams, CallDetectMethodParams, CallDetectMachineParams, CallDetectFaxParams, CallDetectDigitParams, } from '../types/voice';
//# sourceMappingURL=Voice.d.ts.map