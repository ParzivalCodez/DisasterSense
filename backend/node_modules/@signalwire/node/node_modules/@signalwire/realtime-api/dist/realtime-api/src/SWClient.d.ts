import type { Client } from './client/Client';
import { Task } from './task/Task';
import { Messaging } from './messaging/Messaging';
import { PubSub } from './pubSub/PubSub';
import { Chat } from './chat/Chat';
import { Voice } from './voice/Voice';
import { Video } from './video/Video';
export interface SWClientOptions {
    host?: string;
    project: string;
    token: string;
    logLevel?: 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'silent';
    debug?: {
        logWsTraffic?: boolean;
    };
}
export declare class SWClient {
    private _task;
    private _messaging;
    private _pubSub;
    private _chat;
    private _voice;
    private _video;
    userOptions: SWClientOptions;
    client: Client;
    constructor(options: SWClientOptions);
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    get task(): Task;
    get messaging(): Messaging;
    get pubSub(): PubSub;
    get chat(): Chat;
    get voice(): Voice;
    get video(): Video;
}
//# sourceMappingURL=SWClient.d.ts.map