import { InternalChatMemberEntity, InternalChatMessageEntity, PaginationCursor } from '../types';
import { BaseRPCResult } from '../utils/interfaces';
export interface GetMembersInput extends BaseRPCResult {
    members: InternalChatMemberEntity[];
}
export interface GetMessagesInput extends BaseRPCResult {
    messages: InternalChatMessageEntity[];
    cursor: PaginationCursor;
}
export declare function applyCommonMethods<T extends new (...args: any[]) => any>(targetClass: T): {
    new (...args: any[]): {
        [x: string]: any;
        getMembers(params: GetMembersInput): any;
        getMessages(params: GetMessagesInput): any;
        setMemberState({ memberId, ...rest }?: Record<string, unknown>): any;
        getMemberState({ memberId, ...rest }?: Record<string, unknown>): any;
    };
} & T;
//# sourceMappingURL=applyCommonMethods.d.ts.map