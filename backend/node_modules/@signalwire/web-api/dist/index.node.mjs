// src/validateRequest.ts
import { createHmac } from "crypto";
import { RestClient } from "@signalwire/compatibility-api";
var validateRequest = (privateKey, header, url, rawBody) => {
  if (typeof rawBody !== "string") {
    throw new TypeError(`"rawBody" is not a string. You may need to JSON.stringify the request body.`);
  }
  const hmac = createHmac("sha1", privateKey);
  hmac.update(`${url}${rawBody}`);
  const valid = hmac.digest("hex") === header;
  if (valid) {
    return true;
  }
  const parsedBody = JSON.parse(rawBody);
  return RestClient.validateRequest(privateKey, header, url, parsedBody, true);
};
export {
  validateRequest
};
//# sourceMappingURL=index.node.mjs.map
